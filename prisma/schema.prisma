// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id   Int    @id @default(autoincrement())
  name String

  posts    Post[]
  timeLine TimeLine[]
}

model TimeLine {
  id        Int      @id @default(autoincrement())
  name      String
  startDate DateTime

  userId                Int
  users                 User                    @relation(fields: [userId], references: [id])
  timeLineHasTravelDays TimeLineHasTravelDays[]

  Post Post[]
  @@unique([userId, name])
}

model Post {
  id    Int     @id @default(autoincrement())
  title String?
  body  String

  userId           Int
  user             User     @relation(fields: [userId], references: [id])
  timeLineId       Int
  routeColleaction TimeLine @relation(fields: [timeLineId], references: [id])
}

model TimeLineHasTravelDays {
  timeLineId  Int
  travelDayId Int
  timeLine    TimeLine  @relation(fields: [timeLineId], references: [id])
  travelDays  TravelDay @relation(fields: [travelDayId], references: [id])

  @@id([timeLineId, travelDayId])
}

model TravelDay {
  id       Int      @id @default(autoincrement())
  title    String?
  body     String?
  date     DateTime @unique
  distance Decimal?

  timeLineTravelDays TimeLineHasTravelDays[]
  route              Route[]
  payments           Payment[]
}

model Route {
  id          Int    @id @default(autoincrement())
  type        String
  coordinates Json
  properties  Json

  travelDay   TravelDay? @relation(fields: [travelDayId], references: [id])
  travelDayId Int?
}

model Payment {
  id          Int     @id @default(autoincrement())
  amount      Decimal
  category    String?
  description String?

  travelDayId Int
  travelDay   TravelDay @relation(fields: [travelDayId], references: [id])
  currencyId  String
  currency    Currency  @relation(fields: [currencyId], references: [isoCode])
}

model Currency {
  isoCode      String   @id
  currency     String   @unique
  exchangeRate Decimal?

  payments Payment[]
}
