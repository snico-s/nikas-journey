generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int        @id @default(autoincrement())
  name     String
  email    String     @unique
  isAdmin  Boolean    @default(false)
  password String
  posts    Post[]
  timeLine TimeLine[]
}

model TimeLine {
  id                    Int                     @id @default(autoincrement())
  name                  String
  startDate             DateTime
  userId                Int
  users                 User                    @relation(fields: [userId], references: [id])
  Post                  Post[]
  timeLineHasTravelDays TimeLineHasTravelDays[]

  @@unique([userId, name])
}

model Post {
  id               Int      @id @default(autoincrement())
  title            String?
  body             String
  userId           Int
  timeLineId       Int
  routeColleaction TimeLine @relation(fields: [timeLineId], references: [id])
  user             User     @relation(fields: [userId], references: [id])
}

model TimeLineHasTravelDays {
  timeLineId  Int
  travelDayId Int
  timeLine    TimeLine  @relation(fields: [timeLineId], references: [id])
  travelDays  TravelDay @relation(fields: [travelDayId], references: [id])

  @@id([timeLineId, travelDayId])
}

model TravelDay {
  id                 Int                     @id @default(autoincrement())
  title              String?
  body               String?
  date               DateTime                @unique
  distance           Decimal?
  payments           Payment[]
  route              Route[]
  timeLineTravelDays TimeLineHasTravelDays[]
}

model Route {
  id   Int    @id @default(autoincrement())
  type String
  // route Unsupported("geometry(LineString, 4326)")

  coordinates Json
  properties  Json
  travelDayId Int?
  travelDay   TravelDay? @relation(fields: [travelDayId], references: [id])

  // @@index([route], name: "route_idx", type: Gist)
}

model Payment {
  id          Int       @id @default(autoincrement())
  amount      Decimal
  category    String?
  description String?
  travelDayId Int
  currencyId  String
  currency    Currency  @relation(fields: [currencyId], references: [isoCode])
  travelDay   TravelDay @relation(fields: [travelDayId], references: [id])
}

model Currency {
  isoCode      String    @id
  currency     String    @unique
  exchangeRate Decimal?
  payments     Payment[]
}

model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}
